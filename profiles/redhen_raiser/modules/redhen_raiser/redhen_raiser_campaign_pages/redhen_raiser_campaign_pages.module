<?php
/**
 * @file
 * Code for the RedHen Raiser Campaign Pages feature.
 */

include_once 'redhen_raiser_campaign_pages.features.inc';

/**
 * Implements hook_views_pre_render().
 *
 * Put the Campaign name into the campaign pages view title.
 */
function redhen_raiser_campaign_pages_views_pre_render(&$view) {
  if ($view->name == "campaign_pages" && $view->current_display == "campaign_pages") {
    $campaign = redhen_campaign_load($view->args[0]);
    $title_pattern = $view->build_info['title'];
    foreach ($view->build_info['substitutions'] as $needle => $value) {
      $title_pattern = str_replace($needle, $value, $title_pattern);
    }
    $new_title = str_replace($view->args[0], $campaign->label, $title_pattern);
    if ($campaign) {
      $new_title = str_replace('$campaign_id', $campaign->campaign_id, $new_title);
    }
    $view->set_title($new_title);
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function redhen_raiser_campaign_pages_entity_info_alter(&$entity_info) {
  $entity_info['redhen_campaign_page']['view modes']['progress'] = array(
    'label' => t('Progress'),
    'custom settings' => TRUE,
  );
  $entity_info['redhen_campaign_page']['view modes']['snippet'] = array(
    'label' => t('Snippet'),
    'custom settings' => TRUE,
  );
  $entity_info['redhen_campaign_page']['view modes']['banner'] = array(
    'label' => t('Banner'),
    'custom settings' => TRUE,
  );
  $entity_info['redhen_campaign_page']['view modes']['contextual_banner'] = array(
    'label' => t('Contextual Banner'),
    'custom settings' => TRUE,
  );
  $entity_info['redhen_campaign_page']['view modes']['promotion'] = array(
    'label' => t('Promo'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_entity_view_alter().
 */
function redhen_raiser_campaign_pages_entity_view_alter(&$build, $type) {
  if ($type == 'redhen_campaign_page') {
    switch ($build['#view_mode']) {
      case 'teaser':
      case 'snippet':
        $uri = $build['#entity']->uri();
        $path = $uri['path'];

        // Link the label.
        if (!empty($build['label']['#items'][0]['#markup'])) {
          $build['label']['#items'][0]['#markup'] = l(
            $build['label']['#items'][0]['#markup'],
            $path
          );
        }

        // Link the image.
        if (!empty($build['owner']['redhen_contact'])) {
          foreach ($build['owner']['redhen_contact'] as $contact_id => $contact) {
            $build['owner']['redhen_contact'][$contact_id]['avatar']['#post_render'] = array(
              '_redhen_raiser_campaign_pages_contact_image_post_render',
            );
            $build['owner']['redhen_contact'][$contact_id]['avatar']['link_url'] = $path;
          }
        }
        break;

      case 'full':
        if (isset($build['campaign'])) {
          _redhen_raiser_core_colectomify($build['campaign']);
          $build['campaign']['#label'] = 'Fundraising for';
          unset($build['campaign']['#label_hidden']);
        }
        if (isset($build['team'])) {
          _redhen_raiser_core_colectomify($build['team']);
          $build['team']['#label'] = 'with';
        }
        // If the user arrived via a team invitation link, post a notice.
        $entity_uri = $build['#entity']->uri();
        if (!empty($_SESSION['redhen_campaign_team_invitations'][$build['#entity']->page_id])) {
          if (isset($_GET['dismiss']) && $_GET['dismiss']) {
            unset($_SESSION['redhen_campaign_team_invitations'][$build['#entity']->page_id]);
          }
          else {
            $join_link = url('redhen_campaign_page/add',
              array(
                'query' => array(
                  'campaign' => $build['#entity']->campaign,
                  'team' => $build['#entity']->page_id,
                ),
                'absolute' => FALSE,
              ));
            drupal_set_message(t('You have been invited to join %teamname! <a href=@link>Get started now</a>! (<a href=@dismiss>dismiss</a>)',
              array(
                '%teamname' => $build['#entity']->label,
                '@link' => url('user/register',
                  array(
                    'query' => array(
                      'destination' => $join_link,
                    ),
                  )
                ),
                '@dismiss' => url($entity_uri['path'],
                  array(
                    'query' => array(
                      'dismiss' => '1',
                    ),
                  )
                ),
              )), 'status', FALSE);
          }
        }
        break;

      case 'promotion':
        $campaign = redhen_campaign_load($build['#entity']->campaign);
        $build['campaign'] = entity_view('redhen_campaign', array($campaign), 'promotion', NULL, FALSE);
        break;

    }
  }
}

/**
 * A simple form for selecting a campaign to join before creating a fundraiser.
 */
function redhen_raiser_campaign_pages_create_fundraiser_form($form, &$form_state) {
  $campaigns = redhen_raiser_campaigns_load_active();
  $options = array('' => '-- Select --');
  foreach ($campaigns as $campaign) {
    $options[$campaign->campaign_id] = $campaign->label;
  }
  $form['campaign'] = array(
    '#type' => 'select',
    '#title' => t('Which fundraising campaign would you like to join?'),
    '#options' => $options,
    '#attributes' => array('onChange' => 'document.getElementById("redhen-raiser-campaign-pages-create-fundraiser-form").submit();'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Create Fundraiser',
    '#attributes' => array('class' => array('element-invisible')),
  );
  return $form;
}

/**
 * Form submission handler.
 */
function redhen_raiser_campaign_pages_create_fundraiser_form_submit($form, &$form_state) {
  drupal_goto('redhen_campaign_page/add', array('query' => array('campaign' => $form_state['input']['campaign'])));
}

/**
 * Post-render callback to link an image to the designated campaign page.
 */
function _redhen_raiser_campaign_pages_contact_image_post_render($html, $variables) {
  $linked_img = l($html, $variables['link_url'], array('html' => TRUE));

  return $linked_img;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function redhen_raiser_campaign_pages_form_redhen_campaign_campaign_page_form_alter(&$form, &$form_state, $form_id) {
  $form['campaign']['#access'] = user_access('administer redhen campaign pages') || empty($form_state['campaign']);
  $form['team']['#access'] = user_access('administer redhen campaign pages') || empty($form_state['team']);
  if (isset($form['field_teaser'])) {
    $form['field_teaser'][$form['field_teaser']['#language']][0]['value']['#maxlength'] = 128;
  }
}

/**
 * Implements hook_form_FORM_alter().
 */
function redhen_raiser_campaign_pages_form_alter(&$form, $form_state) {

  if ($form['#form_id'] == 'redhen_campaign_campaign_page_delete_form') {
    if (empty($form_state['redhen_campaign_page']->page_id)) {
      return;
    }

    $query = new EntityFieldQuery();
    $result = $query
      ->entityCondition('entity_type', 'redhen_donation')
      ->propertyCondition('redhen_campaign_page_context', $form_state['redhen_campaign_page']->page_id)
      ->range(0, 1)
      ->execute();

    if (!empty($result['redhen_donation'])) {
      $has_donations = TRUE;
    }

    //Get child menu items array for this node
    if ($has_donations) {

      //Construct explanatory message
      $msg = '<p>';
      $msg .= t("You can't delete this campaign because it has donations.");
      $msg .= '</p>';


      //Set explanatory message
      $form['redhen_raiser_exist_warning'] = array(
        '#markup' => $msg,
        '#weight' => -10,
      );

      //Remove the 'This action cannot be undone' message
      unset($form['description']);

      //Remove the delete button
      unset($form['actions']['submit']);
    }
  }
}



/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Implements hook_form_redhen_campaign_invite_form_alter().
 *  Adds Facebook and other social media invitation options.
 */
function redhen_raiser_campaign_pages_form_redhen_campaign_invite_form_alter(&$form, &$form_state, $form_id) {
  $form['instructions'] = array(
    '#type' => 'markup',
    '#markup' => "<p>You can invite your friends or coworkers to join your fundraising team via Email or Facebook using the form and buttons below.</p>"
      . "<p>Click the Facebook button to create Facebook post with a link for your friends join your team.</p>"
      . "<p>To send an email invitation, fill out the email address fields and customize your message, which will be sent along with the link to join the team.</p>",
    '#weight' => 0,
  );
  $form['invite_options'] = array(
    '#type' => 'container',
  );
  $form['invite_options']['use_email'] = array(
    '#type' => 'checkbox',
    '#title' => 'Email',
    '#attributes' => array(
      'class' => array(
        'invite_option',
      ),
    ),
    '#weight' => 1,
  );
  $form['emails']['#states']['invisible'][] = 
  $form['message']['#states']['invisible'][] = 
  $form['actions']['#states']['invisible'][] = array(
    ':input[name="use_email"]' => array('checked' => FALSE),
  );
  $join_link = url('redhen_campaign/page/' .  $form_state['redhen_campaign_page']->page_id . '/join',
    array(
      'absolute' => TRUE,
    )
  );
  $form['invite_options']['facebook'] = array(
    '#type' => 'markup',
    '#markup' => "<a href=\"javascript:raiserShare('http://www.facebook.com/sharer.php?u=','" .
      $join_link .
      "', 520, 350)\" class='invite_option'>Facebook</a>",
    '#weight' => 2,
  );
  $form['invite_options']['google+'] = array(
    '#type' => 'markup',
    '#markup' => "<a href=\"javascript:raiserShare('https://plus.google.com/share?url=','" .
      $join_link .
      "', 520, 350)\" class='invite_option'>Google+</a> ",
    '#weight' => 3,
  );
  drupal_add_js(drupal_get_path('module', 'redhen_raiser_campaign_pages') . '/js/redhen_raiser_share.js');
}

/**
 * Implements hook_metatag_metatags_view_alter().
 */
function redhen_raiser_campaign_pages_metatag_metatags_view_alter(&$output, $instance, $options) {
  // The user register page needs customized metatags when there is a query
  // parameter, so that "join my team" links show up with rich content on
  // Facebook.
  if ($instance == 'global' && preg_match('/^redhen_campaign\/page\/[0-9]+\/join$/', $_GET['q'])) {
    $urlements = explode('/', $_GET['q']);
    $team = redhen_campaign_page_load($urlements['2']);
    $wrapper = entity_metadata_wrapper('redhen_campaign_page', $team);
    // Custom Title:
    $output['og:title']['#attached']['drupal_add_html_head'][0][0]['#value'] = t('Join @teamname to fundraise for @campaign!',
      array(
        '@teamname' => $team->label,
        '@campaign' => $wrapper->campaign->label(),
      ));
    // Find a sensible image to use:
    if ($media = $wrapper->field_story_media->value()) {
      $media_path = $wrapper->field_story_media->file->url->value();
    }
    else {
      $media = $wrapper->campaign->field_banner_image->value();
      $media_path = $wrapper->campaign->field_banner_image->file->url->value();
    }
    // Add the image:
    $output['og:image']['#attached']['drupal_add_html_head'][0] = array(
      array(
        '#theme' => 'metatag_property',
        '#tag' => 'meta',
        '#id' => $media['type'] == 'image' ? 'metatag_og:image_0' : 'metatag_og:video_0',
        '#name' => $media['type'] == 'image' ? 'og:image' : 'og:video',
        '#value' => $media_path,
        '#weight' => 34.1,
      ),
      'metatag_og:image_0',
    );
    // Add a related link for the campaign, structure based on the URL
    // property:
    $output['og:see_also'] = $output['og:url'];
    $output['og:see_also']['#attached']['drupal_add_html_head'][0][0]['#value'] = $wrapper->url->value();
    $output['og:see_also']['#attached']['drupal_add_html_head'][0][1] = 'metatag_og:see_also_0';
    $output['og:see_also']['#attached']['drupal_add_html_head'][0][0]['#id'] = 'metatag_og:see_also_0';
    $output['og:see_also']['#attached']['drupal_add_html_head'][0][0]['#name'] = 'og:see_also';
    $output['og:see_also']['#attached']['drupal_add_html_head'][0][0]['#weight'] = 33.1;
  }
}
